BACKUP ~gaEnemyRando/backup~
AUTHOR ~GuardianAnubite~
VERSION ~V0.75~
README ~gaEnemyRando/readme.txt~
AUTO_TRA ~gaEnemyRando/tra/%s~

ALWAYS
    DEFINE_ACTION_FUNCTION spawnRandomizer STR_VAR path = ~blah~ BEGIN
        OUTER_SET spawnPointSize = 0xc8 // the size of each spawn point 
        OUTER_SET spawnWeightOffset = 0x98 // the distance between the start of a spawn point and the weights
        OUTER_SET spawnCreatureOffset = 0x24 // the distance between the start of a spawn point and the creatures

        // iterate over every area file
        COPY_EXISTING_REGEXP GLOB ~^.+\.are$~ ~override~
    
            READ_ASCII 0x8 areaName
    
            //Exclude High Hedge outside since the Melicamp quest needs specific skeletons to spawn
            PATCH_IF (~%areaName%~ STRING_CONTAINS_REGEXP ~AR3200~) BEGIN
    
                READ_LONG 0x60 spawnOffset // read starting position of the spawn points in file
                READ_LONG 0x64 spawnPoints // read the number of spawn points

                // loop for each spawn point in the area
                FOR (i = 0; i < spawnPoints; i += 1) BEGIN
                    // find start of this specific spawn point
                    SET spawnPointStart = (spawnOffset + (i * spawnPointSize)) 
                    // set "count of spawn creatures" to 10 (offset is 0x74)
                    WRITE_SHORT (spawnPointStart + 0x74) 10

                    // fill out all 10 creature slots
                    FOR (j = 0; j < 10; j += 1) BEGIN
            
                        INNER_ACTION BEGIN
                            COPY ~%path%/spawnMonsters.2da~ ~%path%/spawnMonsters.2da~
                
                            // generate random number and pick matching entry from .2da file
                            COUNT_2DA_ROWS 4 rows
                            SET picker = RANDOM(2 %rows%)
                
                            READ_2DA_ENTRY %picker% 1 4 newCRE
                            //PATCH_PRINT ~New CRE is %newCRE%~
                        END // end inner_action

                        //PATCH_PRINT ~Main loop - New CRE is %newCRE%~
                        // set creatures 1-10 to new values
                        WRITE_ASCIIE (spawnPointStart + spawnCreatureOffset + (0x8 * j)) ~%newCRE%~ #8
                        // set spawn weights 1-10 to be equal
                        WRITE_BYTE (spawnPointStart + spawnWeightOffset + (0x1 * j)) 1
                    END
                END  
            END
    END
    
    
    DEFINE_ACTION_FUNCTION restRandomizer STR_VAR path = ~blah~ BEGIN
        OUTER_SET stringOffset = 0x20 // where the strings for monster attacks are
        OUTER_SET restCountOffset = 0x98 // where the count of creatures (we want 10) is
        OUTER_SET creOffset = 0x48 // where the links to creature files are

        // iterate over every area file
        COPY_EXISTING_REGEXP GLOB ~^.+\.are$~ ~override~

            // skip city or indoor locations
            READ_SHORT 0x48 location
            READ_ASCII 0x8 areaName
    
        PATCH_IF ((location & BIT3) = 0) AND (location != 0) BEGIN
    
            //PATCH_PRINT ~Area name is %areaName%~
            //PATCH_PRINT ~Location code is %location%~
      
            READ_LONG 0xc0 restOffset
            PATCH_IF (restOffset != 0) BEGIN
                WRITE_SHORT (restOffset + restCountOffset) 10
    
                // fill out the 10 creature slots + strings
                FOR (i = 0; i < 10; i += 1) BEGIN
                    SET stringLocation = restOffset + stringOffset + (i * 0x4)
                    SET creLocation = restOffset + creOffset + (i * 0x8)
    
                    WRITE_LONG stringLocation 10134 // set monster string to the generic values
        
                    INNER_ACTION BEGIN
                        COPY ~%path%/spawnMonsters.2da~ ~%path%/spawnMonsters.2da~
                    
                        // generate random number and pick matching entry from .2da file
                        COUNT_2DA_ROWS 4 rows
                        SET picker = RANDOM(2 %rows%)
                        // PATCH_PRINT ~Random seed %i% %j% is %picker%~
                    
                        READ_2DA_ENTRY %picker% 1 4 newCRE
                        //PATCH_PRINT ~New CRE is %newCRE%~
                    END // end inner_action
                WRITE_ASCIIE creLocation ~%newCRE%~ #8
                END
            END
        END
    BUT_ONLY
    END
    
    
    DEFINE_ACTION_FUNCTION setRandomizer STR_VAR path = ~blah~ BEGIN
    
        COPY_EXISTING_REGEXP GLOB ~^.+\.are$~ ~override~
    
        READ_LONG 0x54 actorsOffset // find the location of actors in the area file
        READ_SHORT 0x58 numberActors // find the number of actors
    
        // loop for each actor in the file
        FOR (i = 0; i < numberActors; i += 1) BEGIN
            SET actorLocation = actorsOffset + (i * 0x110) //actor location in file
            SET animLocation = actorLocation + 0x30 // location of the actor animation
            SET creLocation = actorLocation + 0x80 // location of the actor CRE file
        
            READ_ASCII creLocation creFile // read the CRE file for the actor
            SET update = 0
        
            // search in 2da files for matching CRE file, if found then randomly pick replacement
            INNER_ACTION BEGIN
        
                ACTION_BASH_FOR ~%path%/~ ~^.+\.2da$~ BEGIN
                    COPY "%BASH_FOR_FILESPEC%" "%BASH_FOR_FILESPEC%"
                
                    // check to see if creFile is in 2da file 
                    COUNT_REGEXP_INSTANCES CASE_INSENSITIVE EVALUATE_REGEXP ~ %creFile% ~ match // find number of matches for old CRE file
                  
                    //PATCH_PRINT ~Number of matches is %match%~  
                  
                    // if match isn't 0, pick new monster
                    PATCH_IF (match > 0) BEGIN
                
                        //PATCH_PRINT ~Current creFile is %creFile%~
                
                        SET update = 1
                        COUNT_2DA_ROWS 4 rows
                    
                        //PATCH_PRINT ~Number of rows in 2da file is %rows%~
                    
                        SET picker = RANDOM(2 rows)
                        // read name, animation, and cre file from 2da for picker row
                        //READ_2DA_ENTRY %picker% 0 4 newName
                        READ_2DA_ENTRY %picker% 1 4 newCRE
                        READ_2DA_ENTRY %picker% 2 4 newAnim
                
                        //PATCH_PRINT ~New animation is %newAnim%~
                        //PATCH_PRINT ~New CRE is %newCRE%~
                    END  
                    BUT_ONLY
                END
            END
        
            PATCH_IF (update != 0) BEGIN
                // update actor animation, and cre file
                WRITE_ASCIIE creLocation ~%newCRE%~ #8
                WRITE_LONG animLocation %newAnim%
            END    
        END
    END
    
    
END

LANGUAGE English english "gaEnemyRando/tra/english/setup.tra"


BEGIN ~BG creatures only~
SUBCOMPONENT ~BG1 Spawn Point Randomizer~
REQUIRE_PREDICATE GAME_IS ~totsc bgee tutu_totsc~ ~Requires BG1~
RANDOM_SEED 3.14
LAUNCH_ACTION_FUNCTION spawnRandomizer STR_VAR path = ~gaEnemyRando/bg1~ END

BEGIN ~With SoD creatures (Makes BG1 slightly tougher)~
SUBCOMPONENT ~BG1 Spawn Point Randomizer~
REQUIRE_PREDICATE GAME_INCLUDES ~sod~ ~Requires SoD~
RANDOM_SEED 3.14
LAUNCH_ACTION_FUNCTION spawnRandomizer STR_VAR path = ~gaEnemyRando/bg1/sod~ END

BEGIN ~BG2 Spawn Point Randomizer~
REQUIRE_PREDICATE GAME_IS ~tob bg2ee~ ~Requires BG2~
RANDOM_SEED 3.14
LAUNCH_ACTION_FUNCTION spawnRandomizer STR_VAR path = ~gaEnemyRando/bg2~ END

BEGIN ~With SoD creatures (Makes BG1 slightly tougher)~
SUBCOMPONENT ~EET Spawn Point Randomizer~
REQUIRE_PREDICATE (GAME_INCLUDES ~sod~ AND GAME_IS ~eet~) ~Requires EET and SoD~
RANDOM_SEED 3.14
LAUNCH_ACTION_FUNCTION spawnRandomizer STR_VAR path = ~gaEnemyRando/eet/sod~ END  

BEGIN ~Without SoD creatures~
SUBCOMPONENT ~EET Spawn Point Randomizer~
REQUIRE_PREDICATE GAME_IS ~eet~ ~Requires EET~
RANDOM_SEED 3.14
LAUNCH_ACTION_FUNCTION spawnRandomizer STR_VAR path = ~gaEnemyRando/eet~ END



BEGIN ~BG creatures only~
SUBCOMPONENT ~BG1 Rest Encounter Randomizer~
REQUIRE_PREDICATE GAME_IS ~totsc bgee tutu_totsc~ ~Requires BG1~
RANDOM_SEED 3.14
LAUNCH_ACTION_FUNCTION restRandomizer STR_VAR path = ~gaEnemyRando/bg1~ END

BEGIN ~With SoD creatures (Makes BG1 slightly tougher)~
SUBCOMPONENT ~BG1 Rest Encounter Randomizer~
REQUIRE_PREDICATE GAME_INCLUDES ~sod~ ~Requires SoD~
RANDOM_SEED 3.14
LAUNCH_ACTION_FUNCTION restRandomizer STR_VAR path = ~gaEnemyRando/bg1/sod~ END

BEGIN ~BG2 Rest Encounter Randomizer~
REQUIRE_PREDICATE GAME_IS ~tob bg2ee~ ~Requires BG2~
RANDOM_SEED 3.14
LAUNCH_ACTION_FUNCTION restRandomizer STR_VAR path = ~gaEnemyRando/bg2~ END

BEGIN ~With SoD creatures (Makes BG1 slightly tougher)~
SUBCOMPONENT ~EET Rest Encounter Randomizer~
REQUIRE_PREDICATE (GAME_INCLUDES ~sod~ AND GAME_IS ~eet~) ~Requires EET and SoD~
RANDOM_SEED 3.14
LAUNCH_ACTION_FUNCTION restRandomizer STR_VAR path = ~gaEnemyRando/eet/sod~ END  

BEGIN ~Without SoD creatures~
SUBCOMPONENT ~EET Rest Encounter Randomizer~
REQUIRE_PREDICATE GAME_IS ~eet~ ~Requires EET~
RANDOM_SEED 3.14
LAUNCH_ACTION_FUNCTION restRandomizer STR_VAR path = ~gaEnemyRando/eet~ END



BEGIN ~BG creatures only~
SUBCOMPONENT ~BG1 Set Creature Randomizer~
REQUIRE_PREDICATE GAME_IS ~totsc bgee tutu_totsc~ ~Requires BG1~
RANDOM_SEED 3.14
LAUNCH_ACTION_FUNCTION setRandomizer STR_VAR path = ~gaEnemyRando/bg1~ END

BEGIN ~With SoD creatures (Makes BG1 slightly tougher)~
SUBCOMPONENT ~BG1 Set Creature Randomizer~
REQUIRE_PREDICATE GAME_INCLUDES ~sod~ ~Requires SoD~
RANDOM_SEED 3.14
LAUNCH_ACTION_FUNCTION setRandomizer STR_VAR path = ~gaEnemyRando/bg1/sod~ END

BEGIN ~BG2 Set Creature Randomizer~
REQUIRE_PREDICATE GAME_IS ~tob bg2ee~ ~Requires BG2~
RANDOM_SEED 3.14
LAUNCH_ACTION_FUNCTION setRandomizer STR_VAR path = ~gaEnemyRando/bg2~ END

BEGIN ~With SoD creatures (Makes BG1 slightly tougher)~
SUBCOMPONENT ~EET Set Creature Randomizer~
REQUIRE_PREDICATE (GAME_INCLUDES ~sod~ AND GAME_IS ~eet~) ~Requires EET and SoD~
RANDOM_SEED 3.14
LAUNCH_ACTION_FUNCTION setRandomizer STR_VAR path = ~gaEnemyRando/eet/sod~ END  

BEGIN ~Without SoD creatures~
SUBCOMPONENT ~EET Set Creature Randomizer~
REQUIRE_PREDICATE GAME_IS ~eet~ ~Requires EET~
RANDOM_SEED 3.14
LAUNCH_ACTION_FUNCTION setRandomizer STR_VAR path = ~gaEnemyRando/eet~ END